

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Aug 11 14:16:46 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 09/04/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  00030C                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _flag
    62  00030C  0001               	dw	1
    63  0000                     _ADRES	set	4035
    64  0000                     _TMR0	set	4054
    65  0000                     _LATDbits	set	3980
    66  0000                     _T0CON	set	4053
    67  0000                     _ADCON0bits	set	4034
    68  0000                     _ADCON2	set	4032
    69  0000                     _ADCON1	set	4033
    70  0000                     _PIE1bits	set	3997
    71  0000                     _INTCONbits	set	4082
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISA	set	3986
    74  0000                     _TMR0IF	set	32658
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79  0002DE                     __pcinit:
    80                           	callstack 0
    81  0002DE                     start_initialization:
    82                           	callstack 0
    83  0002DE                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Initialize objects allocated to COMRAM (2 bytes)
    87                           ; load TBLPTR registers with __pidataCOMRAM
    88  0002DE  0E0C               	movlw	low __pidataCOMRAM
    89  0002E0  6EF6               	movwf	tblptrl,c
    90  0002E2  0E03               	movlw	high __pidataCOMRAM
    91  0002E4  6EF7               	movwf	tblptrh,c
    92  0002E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    93  0002E8  6EF8               	movwf	tblptru,c
    94  0002EA  0009               	tblrd		*+	;fetch initializer
    95  0002EC  CFF5 F023          	movff	tablat,__pdataCOMRAM
    96  0002F0  0009               	tblrd		*+	;fetch initializer
    97  0002F2  CFF5 F024          	movff	tablat,__pdataCOMRAM+1
    98                           
    99                           ; Clear objects allocated to COMRAM (8 bytes)
   100  0002F6  EE00  F01B         	lfsr	0,__pbssCOMRAM
   101  0002FA  0E08               	movlw	8
   102  0002FC                     clear_0:
   103  0002FC  6AEE               	clrf	postinc0,c
   104  0002FE  06E8               	decf	wreg,f,c
   105  000300  E1FD               	bnz	clear_0
   106  000302                     end_of_initialization:
   107                           	callstack 0
   108  000302                     __end_of__initialization:
   109                           	callstack 0
   110  000302  9025               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   111  000304  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   112  000306  0100               	movlb	0
   113  000308  EF47  F001         	goto	_main	;jump to C main() function
   114                           
   115                           	psect	bssCOMRAM
   116  00001B                     __pbssCOMRAM:
   117                           	callstack 0
   118  00001B                     _pot:
   119                           	callstack 0
   120  00001B                     	ds	4
   121  00001F                     _grados:
   122                           	callstack 0
   123  00001F                     	ds	4
   124                           
   125                           	psect	dataCOMRAM
   126  000023                     __pdataCOMRAM:
   127                           	callstack 0
   128  000023                     _flag:
   129                           	callstack 0
   130  000023                     	ds	2
   131                           
   132                           	psect	cstackCOMRAM
   133  000001                     __pcstackCOMRAM:
   134                           	callstack 0
   135  000001                     ??_my_isr:
   136                           
   137                           ; 1 bytes @ 0x0
   138  000001                     	ds	1
   139  000002                     ?___lmul:
   140                           	callstack 0
   141  000002                     ___lmul@multiplier:
   142                           	callstack 0
   143                           
   144                           ; 4 bytes @ 0x1
   145  000002                     	ds	4
   146  000006                     ___lmul@multiplicand:
   147                           	callstack 0
   148                           
   149                           ; 4 bytes @ 0x5
   150  000006                     	ds	4
   151  00000A                     ___lmul@product:
   152                           	callstack 0
   153                           
   154                           ; 4 bytes @ 0x9
   155  00000A                     	ds	4
   156  00000E                     ?___lldiv:
   157                           	callstack 0
   158  00000E                     ___lldiv@dividend:
   159                           	callstack 0
   160                           
   161                           ; 4 bytes @ 0xD
   162  00000E                     	ds	4
   163  000012                     ___lldiv@divisor:
   164                           	callstack 0
   165                           
   166                           ; 4 bytes @ 0x11
   167  000012                     	ds	4
   168  000016                     ___lldiv@quotient:
   169                           	callstack 0
   170                           
   171                           ; 4 bytes @ 0x15
   172  000016                     	ds	4
   173  00001A                     ___lldiv@counter:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x19
   177  00001A                     	ds	1
   178  00001B                     
   179                           ; 1 bytes @ 0x1A
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 15 in file "Servo control pot.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2, status,0, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   199 ;;      Params:         0       0       0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels required when called:    3
   205 ;; This function calls:
   206 ;;		_servo_control
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text0
   213  00028E                     __ptext0:
   214                           	callstack 0
   215  00028E                     _main:
   216                           	callstack 28
   217  00028E                     
   218                           ;Servo control pot.c: 16: TRISA = 0X0F;
   219  00028E  0E0F               	movlw	15
   220  000290  6E92               	movwf	146,c	;volatile
   221                           
   222                           ;Servo control pot.c: 17: TRISD = 0X00;
   223  000292  0E00               	movlw	0
   224  000294  6E95               	movwf	149,c	;volatile
   225  000296                     
   226                           ;Servo control pot.c: 18: INTCONbits.GIE = 0;
   227  000296  9EF2               	bcf	242,7,c	;volatile
   228  000298                     
   229                           ;Servo control pot.c: 19: PIE1bits.ADIE = 0;
   230  000298  9C9D               	bcf	157,6,c	;volatile
   231  00029A                     
   232                           ;Servo control pot.c: 20: INTCONbits.PEIE_GIEL = 0;
   233  00029A  9CF2               	bcf	242,6,c	;volatile
   234  00029C                     
   235                           ;Servo control pot.c: 21: INTCONbits.TMR0IE = 1;
   236  00029C  8AF2               	bsf	242,5,c	;volatile
   237                           
   238                           ;Servo control pot.c: 22: ADCON1 = 0B00001110;
   239  00029E  0E0E               	movlw	14
   240  0002A0  6EC1               	movwf	193,c	;volatile
   241                           
   242                           ;Servo control pot.c: 26: ADCON2 = 0B10001110;
   243  0002A2  0E8E               	movlw	142
   244  0002A4  6EC0               	movwf	192,c	;volatile
   245                           
   246                           ;Servo control pot.c: 27: ADCON0bits.CHS = 0B0000;
   247  0002A6  0EC3               	movlw	-61
   248  0002A8  16C2               	andwf	194,f,c	;volatile
   249  0002AA                     
   250                           ;Servo control pot.c: 28: ADCON0bits.ADON = 1;
   251  0002AA  80C2               	bsf	194,0,c	;volatile
   252  0002AC                     
   253                           ;Servo control pot.c: 29: ADCON0bits.GO_nDONE = 1;
   254  0002AC  82C2               	bsf	194,1,c	;volatile
   255                           
   256                           ;Servo control pot.c: 34: T0CON = 0B10000001;
   257  0002AE  0E81               	movlw	129
   258  0002B0  6ED5               	movwf	213,c	;volatile
   259  0002B2                     
   260                           ;Servo control pot.c: 36: INTCONbits.GIE = 1;
   261  0002B2  8EF2               	bsf	242,7,c	;volatile
   262  0002B4                     
   263                           ;Servo control pot.c: 37: INTCONbits.PEIE_GIEL = 1;
   264  0002B4  8CF2               	bsf	242,6,c	;volatile
   265                           
   266                           ;Servo control pot.c: 39: TMR0 = 0;
   267  0002B6  0E00               	movlw	0
   268  0002B8  6ED7               	movwf	215,c	;volatile
   269  0002BA  0E00               	movlw	0
   270  0002BC  6ED6               	movwf	214,c	;volatile
   271  0002BE                     
   272                           ;Servo control pot.c: 40: TMR0IF = 0;
   273  0002BE  94F2               	bcf	4082,2,c	;volatile
   274  0002C0                     
   275                           ;Servo control pot.c: 42: LATDbits.LD0 = 0;
   276  0002C0  908C               	bcf	140,0,c	;volatile
   277  0002C2                     l963:
   278                           
   279                           ;Servo control pot.c: 44: {;Servo control pot.c: 45: ADCON0bits.GO_DONE = 1;
   280  0002C2  82C2               	bsf	194,1,c	;volatile
   281  0002C4                     l38:
   282  0002C4  B2C2               	btfsc	194,1,c	;volatile
   283  0002C6  EF67  F001         	goto	u211
   284  0002CA  EF69  F001         	goto	u210
   285  0002CE                     u211:
   286  0002CE  EF62  F001         	goto	l38
   287  0002D2                     u210:
   288  0002D2                     
   289                           ;Servo control pot.c: 48: servo_control();
   290  0002D2  EC09  F000         	call	_servo_control	;wreg free
   291  0002D6  EF61  F001         	goto	l963
   292  0002DA  EF07  F000         	goto	start
   293  0002DE                     __end_of_main:
   294                           	callstack 0
   295                           
   296 ;; *************** function _servo_control *****************
   297 ;; Defined at:
   298 ;;		line 64 in file "Servo control pot.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   312 ;;      Params:         0       0       0       0       0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used:    1
   318 ;; Hardware stack levels required when called:    2
   319 ;; This function calls:
   320 ;;		___lldiv
   321 ;;		___lmul
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text1
   328  000012                     __ptext1:
   329                           	callstack 0
   330  000012                     _servo_control:
   331                           	callstack 28
   332  000012                     
   333                           ;Servo control pot.c: 69: if (flag == 1){
   334  000012  0423               	decf	_flag^0,w,c
   335  000014  1024               	iorwf	(_flag+1)^0,w,c
   336  000016  A4D8               	btfss	status,2,c
   337  000018  EF10  F000         	goto	u191
   338  00001C  EF12  F000         	goto	u190
   339  000020                     u191:
   340  000020  EF52  F000         	goto	l935
   341  000024                     u190:
   342  000024                     
   343                           ;Servo control pot.c: 70: pot=ADRES;
   344  000024  CFC3 F01B          	movff	4035,_pot	;volatile
   345  000028  CFC4 F01C          	movff	4036,_pot+1	;volatile
   346  00002C  6A1D               	clrf	(_pot+2)^0,c
   347  00002E  6A1E               	clrf	(_pot+3)^0,c
   348  000030                     
   349                           ;Servo control pot.c: 76: grados =65535 - (1500+((pot*5500)/1023));
   350  000030  C01B  F002         	movff	_pot,___lmul@multiplier
   351  000034  C01C  F003         	movff	_pot+1,___lmul@multiplier+1
   352  000038  C01D  F004         	movff	_pot+2,___lmul@multiplier+2
   353  00003C  C01E  F005         	movff	_pot+3,___lmul@multiplier+3
   354  000040  0E7C               	movlw	124
   355  000042  6E06               	movwf	___lmul@multiplicand^0,c
   356  000044  0E15               	movlw	21
   357  000046  6E07               	movwf	(___lmul@multiplicand+1)^0,c
   358  000048  0E00               	movlw	0
   359  00004A  6E08               	movwf	(___lmul@multiplicand+2)^0,c
   360  00004C  0E00               	movlw	0
   361  00004E  6E09               	movwf	(___lmul@multiplicand+3)^0,c
   362  000050  ECDD  F000         	call	___lmul	;wreg free
   363  000054  C002  F00E         	movff	?___lmul,___lldiv@dividend
   364  000058  C003  F00F         	movff	?___lmul+1,___lldiv@dividend+1
   365  00005C  C004  F010         	movff	?___lmul+2,___lldiv@dividend+2
   366  000060  C005  F011         	movff	?___lmul+3,___lldiv@dividend+3
   367  000064  0EFF               	movlw	255
   368  000066  6E12               	movwf	___lldiv@divisor^0,c
   369  000068  0E03               	movlw	3
   370  00006A  6E13               	movwf	(___lldiv@divisor+1)^0,c
   371  00006C  0E00               	movlw	0
   372  00006E  6E14               	movwf	(___lldiv@divisor+2)^0,c
   373  000070  0E00               	movlw	0
   374  000072  6E15               	movwf	(___lldiv@divisor+3)^0,c
   375  000074  EC8B  F000         	call	___lldiv	;wreg free
   376  000078  500E               	movf	?___lldiv^0,w,c
   377  00007A  0823               	sublw	35
   378  00007C  6E1F               	movwf	_grados^0,c
   379  00007E  0EFA               	movlw	250
   380  000080  540F               	subfwb	(?___lldiv+1)^0,w,c
   381  000082  6E20               	movwf	(_grados+1)^0,c
   382  000084  0E00               	movlw	0
   383  000086  5410               	subfwb	(?___lldiv+2)^0,w,c
   384  000088  6E21               	movwf	(_grados+2)^0,c
   385  00008A  0E00               	movlw	0
   386  00008C  5411               	subfwb	(?___lldiv+3)^0,w,c
   387  00008E  6E22               	movwf	(_grados+3)^0,c
   388  000090                     
   389                           ;Servo control pot.c: 77: TMR0 = grados;
   390  000090  C01F  FFD6         	movff	_grados,4054	;volatile
   391  000094  C020  FFD7         	movff	_grados+1,4055	;volatile
   392  000098                     
   393                           ;Servo control pot.c: 80: flag=0;
   394  000098  0E00               	movlw	0
   395  00009A  6E24               	movwf	(_flag+1)^0,c
   396  00009C  0E00               	movlw	0
   397  00009E  6E23               	movwf	_flag^0,c
   398                           
   399                           ;Servo control pot.c: 81: }
   400  0000A0  EF8A  F000         	goto	l57
   401  0000A4                     l935:
   402                           
   403                           ;Servo control pot.c: 82: else if(flag == 2)
   404  0000A4  0E02               	movlw	2
   405  0000A6  1823               	xorwf	_flag^0,w,c
   406  0000A8  1024               	iorwf	(_flag+1)^0,w,c
   407  0000AA  A4D8               	btfss	status,2,c
   408  0000AC  EF5A  F000         	goto	u201
   409  0000B0  EF5C  F000         	goto	u200
   410  0000B4                     u201:
   411  0000B4  EF8A  F000         	goto	l57
   412  0000B8                     u200:
   413  0000B8                     
   414                           ;Servo control pot.c: 83: {;Servo control pot.c: 84: TMR0 = 65535 -(60000- (1500+((pot*5
      +                          500)/1023)));
   415  0000B8  C01B  F002         	movff	_pot,___lmul@multiplier
   416  0000BC  C01C  F003         	movff	_pot+1,___lmul@multiplier+1
   417  0000C0  C01D  F004         	movff	_pot+2,___lmul@multiplier+2
   418  0000C4  C01E  F005         	movff	_pot+3,___lmul@multiplier+3
   419  0000C8  0E7C               	movlw	124
   420  0000CA  6E06               	movwf	___lmul@multiplicand^0,c
   421  0000CC  0E15               	movlw	21
   422  0000CE  6E07               	movwf	(___lmul@multiplicand+1)^0,c
   423  0000D0  0E00               	movlw	0
   424  0000D2  6E08               	movwf	(___lmul@multiplicand+2)^0,c
   425  0000D4  0E00               	movlw	0
   426  0000D6  6E09               	movwf	(___lmul@multiplicand+3)^0,c
   427  0000D8  ECDD  F000         	call	___lmul	;wreg free
   428  0000DC  C002  F00E         	movff	?___lmul,___lldiv@dividend
   429  0000E0  C003  F00F         	movff	?___lmul+1,___lldiv@dividend+1
   430  0000E4  C004  F010         	movff	?___lmul+2,___lldiv@dividend+2
   431  0000E8  C005  F011         	movff	?___lmul+3,___lldiv@dividend+3
   432  0000EC  0EFF               	movlw	255
   433  0000EE  6E12               	movwf	___lldiv@divisor^0,c
   434  0000F0  0E03               	movlw	3
   435  0000F2  6E13               	movwf	(___lldiv@divisor+1)^0,c
   436  0000F4  0E00               	movlw	0
   437  0000F6  6E14               	movwf	(___lldiv@divisor+2)^0,c
   438  0000F8  0E00               	movlw	0
   439  0000FA  6E15               	movwf	(___lldiv@divisor+3)^0,c
   440  0000FC  EC8B  F000         	call	___lldiv	;wreg free
   441  000100  0E7B               	movlw	123
   442  000102  240E               	addwf	?___lldiv^0,w,c
   443  000104  6ED6               	movwf	214,c	;volatile
   444  000106  0E1B               	movlw	27
   445  000108  200F               	addwfc	(?___lldiv+1)^0,w,c
   446  00010A  6ED7               	movwf	215,c	;volatile
   447  00010C                     
   448                           ;Servo control pot.c: 87: flag=3;
   449  00010C  0E00               	movlw	0
   450  00010E  6E24               	movwf	(_flag+1)^0,c
   451  000110  0E03               	movlw	3
   452  000112  6E23               	movwf	_flag^0,c
   453  000114                     l57:
   454  000114  0012               	return		;funcret
   455  000116                     __end_of_servo_control:
   456                           	callstack 0
   457                           
   458 ;; *************** function ___lmul *****************
   459 ;; Defined at:
   460 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  multiplier      4    1[COMRAM] unsigned long 
   463 ;;  multiplicand    4    5[COMRAM] unsigned long 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  product         4    9[COMRAM] unsigned long 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  4    1[COMRAM] unsigned long 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   475 ;;      Params:         8       0       0       0       0       0       0       0       0
   476 ;;      Locals:         4       0       0       0       0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0
   478 ;;      Totals:        12       0       0       0       0       0       0       0       0
   479 ;;Total ram usage:       12 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_servo_control
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text2
   490  0001BA                     __ptext2:
   491                           	callstack 0
   492  0001BA                     ___lmul:
   493                           	callstack 28
   494  0001BA  0E00               	movlw	0
   495  0001BC  6E0A               	movwf	___lmul@product^0,c
   496  0001BE  0E00               	movlw	0
   497  0001C0  6E0B               	movwf	(___lmul@product+1)^0,c
   498  0001C2  0E00               	movlw	0
   499  0001C4  6E0C               	movwf	(___lmul@product+2)^0,c
   500  0001C6  0E00               	movlw	0
   501  0001C8  6E0D               	movwf	(___lmul@product+3)^0,c
   502  0001CA                     l895:
   503  0001CA  A002               	btfss	___lmul@multiplier^0,0,c
   504  0001CC  EFEA  F000         	goto	u141
   505  0001D0  EFEC  F000         	goto	u140
   506  0001D4                     u141:
   507  0001D4  EFF4  F000         	goto	l899
   508  0001D8                     u140:
   509  0001D8  5006               	movf	___lmul@multiplicand^0,w,c
   510  0001DA  260A               	addwf	___lmul@product^0,f,c
   511  0001DC  5007               	movf	(___lmul@multiplicand+1)^0,w,c
   512  0001DE  220B               	addwfc	(___lmul@product+1)^0,f,c
   513  0001E0  5008               	movf	(___lmul@multiplicand+2)^0,w,c
   514  0001E2  220C               	addwfc	(___lmul@product+2)^0,f,c
   515  0001E4  5009               	movf	(___lmul@multiplicand+3)^0,w,c
   516  0001E6  220D               	addwfc	(___lmul@product+3)^0,f,c
   517  0001E8                     l899:
   518  0001E8  90D8               	bcf	status,0,c
   519  0001EA  3606               	rlcf	___lmul@multiplicand^0,f,c
   520  0001EC  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
   521  0001EE  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
   522  0001F0  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
   523  0001F2  90D8               	bcf	status,0,c
   524  0001F4  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
   525  0001F6  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
   526  0001F8  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
   527  0001FA  3202               	rrcf	___lmul@multiplier^0,f,c
   528  0001FC  5002               	movf	___lmul@multiplier^0,w,c
   529  0001FE  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
   530  000200  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
   531  000202  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
   532  000204  A4D8               	btfss	status,2,c
   533  000206  EF07  F001         	goto	u151
   534  00020A  EF09  F001         	goto	u150
   535  00020E                     u151:
   536  00020E  EFE5  F000         	goto	l895
   537  000212                     u150:
   538  000212  C00A  F002         	movff	___lmul@product,?___lmul
   539  000216  C00B  F003         	movff	___lmul@product+1,?___lmul+1
   540  00021A  C00C  F004         	movff	___lmul@product+2,?___lmul+2
   541  00021E  C00D  F005         	movff	___lmul@product+3,?___lmul+3
   542  000222  0012               	return		;funcret
   543  000224                     __end_of___lmul:
   544                           	callstack 0
   545                           
   546 ;; *************** function ___lldiv *****************
   547 ;; Defined at:
   548 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  dividend        4   13[COMRAM] unsigned long 
   551 ;;  divisor         4   17[COMRAM] unsigned long 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  quotient        4   21[COMRAM] unsigned long 
   554 ;;  counter         1   25[COMRAM] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  4   13[COMRAM] unsigned long 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   564 ;;      Params:         8       0       0       0       0       0       0       0       0
   565 ;;      Locals:         5       0       0       0       0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0
   567 ;;      Totals:        13       0       0       0       0       0       0       0       0
   568 ;;Total ram usage:       13 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_servo_control
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text3
   579  000116                     __ptext3:
   580                           	callstack 0
   581  000116                     ___lldiv:
   582                           	callstack 28
   583  000116  0E00               	movlw	0
   584  000118  6E16               	movwf	___lldiv@quotient^0,c
   585  00011A  0E00               	movlw	0
   586  00011C  6E17               	movwf	(___lldiv@quotient+1)^0,c
   587  00011E  0E00               	movlw	0
   588  000120  6E18               	movwf	(___lldiv@quotient+2)^0,c
   589  000122  0E00               	movlw	0
   590  000124  6E19               	movwf	(___lldiv@quotient+3)^0,c
   591  000126  5012               	movf	___lldiv@divisor^0,w,c
   592  000128  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
   593  00012A  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
   594  00012C  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
   595  00012E  B4D8               	btfsc	status,2,c
   596  000130  EF9C  F000         	goto	u161
   597  000134  EF9E  F000         	goto	u160
   598  000138                     u161:
   599  000138  EFD4  F000         	goto	l87
   600  00013C                     u160:
   601  00013C  0E01               	movlw	1
   602  00013E  6E1A               	movwf	___lldiv@counter^0,c
   603  000140  EFA8  F000         	goto	l911
   604  000144                     l909:
   605  000144  90D8               	bcf	status,0,c
   606  000146  3612               	rlcf	___lldiv@divisor^0,f,c
   607  000148  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
   608  00014A  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
   609  00014C  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
   610  00014E  2A1A               	incf	___lldiv@counter^0,f,c
   611  000150                     l911:
   612  000150  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
   613  000152  EFAD  F000         	goto	u171
   614  000156  EFAF  F000         	goto	u170
   615  00015A                     u171:
   616  00015A  EFA2  F000         	goto	l909
   617  00015E                     u170:
   618  00015E                     l913:
   619  00015E  90D8               	bcf	status,0,c
   620  000160  3616               	rlcf	___lldiv@quotient^0,f,c
   621  000162  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
   622  000164  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
   623  000166  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
   624  000168  5012               	movf	___lldiv@divisor^0,w,c
   625  00016A  5C0E               	subwf	___lldiv@dividend^0,w,c
   626  00016C  5013               	movf	(___lldiv@divisor+1)^0,w,c
   627  00016E  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
   628  000170  5014               	movf	(___lldiv@divisor+2)^0,w,c
   629  000172  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
   630  000174  5015               	movf	(___lldiv@divisor+3)^0,w,c
   631  000176  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
   632  000178  A0D8               	btfss	status,0,c
   633  00017A  EFC1  F000         	goto	u181
   634  00017E  EFC3  F000         	goto	u180
   635  000182                     u181:
   636  000182  EFCC  F000         	goto	l921
   637  000186                     u180:
   638  000186  5012               	movf	___lldiv@divisor^0,w,c
   639  000188  5E0E               	subwf	___lldiv@dividend^0,f,c
   640  00018A  5013               	movf	(___lldiv@divisor+1)^0,w,c
   641  00018C  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
   642  00018E  5014               	movf	(___lldiv@divisor+2)^0,w,c
   643  000190  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
   644  000192  5015               	movf	(___lldiv@divisor+3)^0,w,c
   645  000194  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
   646  000196  8016               	bsf	___lldiv@quotient^0,0,c
   647  000198                     l921:
   648  000198  90D8               	bcf	status,0,c
   649  00019A  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
   650  00019C  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
   651  00019E  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
   652  0001A0  3212               	rrcf	___lldiv@divisor^0,f,c
   653  0001A2  2E1A               	decfsz	___lldiv@counter^0,f,c
   654  0001A4  EFAF  F000         	goto	l913
   655  0001A8                     l87:
   656  0001A8  C016  F00E         	movff	___lldiv@quotient,?___lldiv
   657  0001AC  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
   658  0001B0  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
   659  0001B4  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
   660  0001B8  0012               	return		;funcret
   661  0001BA                     __end_of___lldiv:
   662                           	callstack 0
   663                           
   664 ;; *************** function _my_isr *****************
   665 ;; Defined at:
   666 ;;		line 52 in file "Servo control pot.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         0       0       0       0       0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0
   682 ;;      Temps:          1       0       0       0       0       0       0       0       0
   683 ;;      Totals:         1       0       0       0       0       0       0       0       0
   684 ;;Total ram usage:        1 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		Interrupt level 2
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	intcode
   694  000008                     __pintcode:
   695                           	callstack 0
   696  000008                     _my_isr:
   697                           	callstack 28
   698                           
   699                           ;incstack = 0
   700  000008  8225               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   701  00000A  ED12  F001         	call	int_func,f	;refresh shadow registers
   702                           
   703                           	psect	intcode_body
   704  000224                     __pintcode_body:
   705                           	callstack 28
   706  000224                     int_func:
   707                           	callstack 28
   708  000224  0006               	pop		; remove dummy address from shadow register refresh
   709  000226                     
   710                           ;Servo control pot.c: 55: if (TMR0IF == 1)
   711  000226  A4F2               	btfss	4082,2,c	;volatile
   712  000228  EF18  F001         	goto	i2u9_41
   713  00022C  EF1A  F001         	goto	i2u9_40
   714  000230                     i2u9_41:
   715  000230  EF45  F001         	goto	i2l51
   716  000234                     i2u9_40:
   717  000234                     
   718                           ;Servo control pot.c: 56: {;Servo control pot.c: 57: if (flag == 0) flag =2;
   719  000234  5023               	movf	_flag^0,w,c
   720  000236  1024               	iorwf	(_flag+1)^0,w,c
   721  000238  A4D8               	btfss	status,2,c
   722  00023A  EF21  F001         	goto	i2u10_41
   723  00023E  EF23  F001         	goto	i2u10_40
   724  000242                     i2u10_41:
   725  000242  EF27  F001         	goto	i2l885
   726  000246                     i2u10_40:
   727  000246  0E00               	movlw	0
   728  000248  6E24               	movwf	(_flag+1)^0,c
   729  00024A  0E02               	movlw	2
   730  00024C  6E23               	movwf	_flag^0,c
   731  00024E                     i2l885:
   732                           
   733                           ;Servo control pot.c: 58: if (flag == 3) flag = 1;
   734  00024E  0E03               	movlw	3
   735  000250  1823               	xorwf	_flag^0,w,c
   736  000252  1024               	iorwf	(_flag+1)^0,w,c
   737  000254  A4D8               	btfss	status,2,c
   738  000256  EF2F  F001         	goto	i2u11_41
   739  00025A  EF31  F001         	goto	i2u11_40
   740  00025E                     i2u11_41:
   741  00025E  EF35  F001         	goto	i2l889
   742  000262                     i2u11_40:
   743  000262  0E00               	movlw	0
   744  000264  6E24               	movwf	(_flag+1)^0,c
   745  000266  0E01               	movlw	1
   746  000268  6E23               	movwf	_flag^0,c
   747  00026A                     i2l889:
   748                           
   749                           ;Servo control pot.c: 59: LATDbits.LD0 = !LATDbits.LD0 ;
   750  00026A  A08C               	btfss	140,0,c	;volatile
   751  00026C  EF3A  F001         	goto	i2u12_41
   752  000270  EF3E  F001         	goto	i2u12_40
   753  000274                     i2u12_41:
   754  000274  6A01               	clrf	??_my_isr^0,c
   755  000276  2A01               	incf	??_my_isr^0,f,c
   756  000278  EF3F  F001         	goto	i2u13_48
   757  00027C                     i2u12_40:
   758  00027C  6A01               	clrf	??_my_isr^0,c
   759  00027E                     i2u13_48:
   760  00027E  508C               	movf	140,w,c	;volatile
   761  000280  1801               	xorwf	??_my_isr^0,w,c
   762  000282  0BFE               	andlw	-2
   763  000284  1801               	xorwf	??_my_isr^0,w,c
   764  000286  6E8C               	movwf	140,c	;volatile
   765  000288                     
   766                           ;Servo control pot.c: 60: TMR0IF = 0;
   767  000288  94F2               	bcf	4082,2,c	;volatile
   768  00028A                     i2l51:
   769  00028A  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   770  00028C  0011               	retfie		f
   771  00028E                     __end_of_my_isr:
   772                           	callstack 0
   773  0000                     
   774                           	psect	rparam
   775  0000                     
   776                           	psect	temp
   777  000025                     btemp:
   778                           	callstack 0
   779  000025                     	ds	1
   780  0000                     int$flags	set	btemp
   781  0000                     wtemp8	set	btemp+1
   782  0000                     ttemp5	set	btemp+1
   783  0000                     ttemp6	set	btemp+4
   784  0000                     ttemp7	set	btemp+8
   785                           
   786                           	psect	idloc
   787                           
   788                           ;Config register IDLOC0 @ 0x200000
   789                           ;	unspecified, using default values
   790  200000                     	org	2097152
   791  200000  FF                 	db	255
   792                           
   793                           ;Config register IDLOC1 @ 0x200001
   794                           ;	unspecified, using default values
   795  200001                     	org	2097153
   796  200001  FF                 	db	255
   797                           
   798                           ;Config register IDLOC2 @ 0x200002
   799                           ;	unspecified, using default values
   800  200002                     	org	2097154
   801  200002  FF                 	db	255
   802                           
   803                           ;Config register IDLOC3 @ 0x200003
   804                           ;	unspecified, using default values
   805  200003                     	org	2097155
   806  200003  FF                 	db	255
   807                           
   808                           ;Config register IDLOC4 @ 0x200004
   809                           ;	unspecified, using default values
   810  200004                     	org	2097156
   811  200004  FF                 	db	255
   812                           
   813                           ;Config register IDLOC5 @ 0x200005
   814                           ;	unspecified, using default values
   815  200005                     	org	2097157
   816  200005  FF                 	db	255
   817                           
   818                           ;Config register IDLOC6 @ 0x200006
   819                           ;	unspecified, using default values
   820  200006                     	org	2097158
   821  200006  FF                 	db	255
   822                           
   823                           ;Config register IDLOC7 @ 0x200007
   824                           ;	unspecified, using default values
   825  200007                     	org	2097159
   826  200007  FF                 	db	255
   827                           
   828                           	psect	config
   829                           
   830                           ;Config register CONFIG1L @ 0x300000
   831                           ;	PLL Prescaler Selection bits
   832                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   833                           ;	System Clock Postscaler Selection bits
   834                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   835                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   836                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   837  300000                     	org	3145728
   838  300000  01                 	db	1
   839                           
   840                           ;Config register CONFIG1H @ 0x300001
   841                           ;	Oscillator Selection bits
   842                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   843                           ;	Fail-Safe Clock Monitor Enable bit
   844                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   845                           ;	Internal/External Oscillator Switchover bit
   846                           ;	IESO = OFF, Oscillator Switchover mode disabled
   847  300001                     	org	3145729
   848  300001  0E                 	db	14
   849                           
   850                           ;Config register CONFIG2L @ 0x300002
   851                           ;	Power-up Timer Enable bit
   852                           ;	PWRT = OFF, PWRT disabled
   853                           ;	Brown-out Reset Enable bits
   854                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   855                           ;	Brown-out Reset Voltage bits
   856                           ;	BORV = 3, Minimum setting 2.05V
   857                           ;	USB Voltage Regulator Enable bit
   858                           ;	VREGEN = OFF, USB voltage regulator disabled
   859  300002                     	org	3145730
   860  300002  19                 	db	25
   861                           
   862                           ;Config register CONFIG2H @ 0x300003
   863                           ;	Watchdog Timer Enable bit
   864                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   865                           ;	Watchdog Timer Postscale Select bits
   866                           ;	WDTPS = 32768, 1:32768
   867  300003                     	org	3145731
   868  300003  1E                 	db	30
   869                           
   870                           ; Padding undefined space
   871  300004                     	org	3145732
   872  300004  FF                 	db	255
   873                           
   874                           ;Config register CONFIG3H @ 0x300005
   875                           ;	CCP2 MUX bit
   876                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
   877                           ;	PORTB A/D Enable bit
   878                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   879                           ;	Low-Power Timer 1 Oscillator Enable bit
   880                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   881                           ;	MCLR Pin Enable bit
   882                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   883  300005                     	org	3145733
   884  300005  80                 	db	128
   885                           
   886                           ;Config register CONFIG4L @ 0x300006
   887                           ;	Stack Full/Underflow Reset Enable bit
   888                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   889                           ;	Single-Supply ICSP Enable bit
   890                           ;	LVP = OFF, Single-Supply ICSP disabled
   891                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   892                           ;	ICPRT = OFF, ICPORT disabled
   893                           ;	Extended Instruction Set Enable bit
   894                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   895                           ;	Background Debugger Enable bit
   896                           ;	DEBUG = 0x1, unprogrammed default
   897  300006                     	org	3145734
   898  300006  80                 	db	128
   899                           
   900                           ; Padding undefined space
   901  300007                     	org	3145735
   902  300007  FF                 	db	255
   903                           
   904                           ;Config register CONFIG5L @ 0x300008
   905                           ;	Code Protection bit
   906                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   907                           ;	Code Protection bit
   908                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   909                           ;	Code Protection bit
   910                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   911                           ;	Code Protection bit
   912                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   913  300008                     	org	3145736
   914  300008  0F                 	db	15
   915                           
   916                           ;Config register CONFIG5H @ 0x300009
   917                           ;	Boot Block Code Protection bit
   918                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   919                           ;	Data EEPROM Code Protection bit
   920                           ;	CPD = OFF, Data EEPROM is not code-protected
   921  300009                     	org	3145737
   922  300009  C0                 	db	192
   923                           
   924                           ;Config register CONFIG6L @ 0x30000A
   925                           ;	Write Protection bit
   926                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   927                           ;	Write Protection bit
   928                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   929                           ;	Write Protection bit
   930                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   931                           ;	Write Protection bit
   932                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   933  30000A                     	org	3145738
   934  30000A  0F                 	db	15
   935                           
   936                           ;Config register CONFIG6H @ 0x30000B
   937                           ;	Configuration Register Write Protection bit
   938                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   939                           ;	Boot Block Write Protection bit
   940                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   941                           ;	Data EEPROM Write Protection bit
   942                           ;	WRTD = OFF, Data EEPROM is not write-protected
   943  30000B                     	org	3145739
   944  30000B  E0                 	db	224
   945                           
   946                           ;Config register CONFIG7L @ 0x30000C
   947                           ;	Table Read Protection bit
   948                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   949                           ;	Table Read Protection bit
   950                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   951                           ;	Table Read Protection bit
   952                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   953                           ;	Table Read Protection bit
   954                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   955  30000C                     	org	3145740
   956  30000C  0F                 	db	15
   957                           
   958                           ;Config register CONFIG7H @ 0x30000D
   959                           ;	Boot Block Table Read Protection bit
   960                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   961  30000D                     	org	3145741
   962  30000D  40                 	db	64
   963                           tosu	equ	0xFFF
   964                           tosh	equ	0xFFE
   965                           tosl	equ	0xFFD
   966                           stkptr	equ	0xFFC
   967                           pclatu	equ	0xFFB
   968                           pclath	equ	0xFFA
   969                           pcl	equ	0xFF9
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           prodh	equ	0xFF4
   975                           prodl	equ	0xFF3
   976                           indf0	equ	0xFEF
   977                           postinc0	equ	0xFEE
   978                           postdec0	equ	0xFED
   979                           preinc0	equ	0xFEC
   980                           plusw0	equ	0xFEB
   981                           fsr0h	equ	0xFEA
   982                           fsr0l	equ	0xFE9
   983                           wreg	equ	0xFE8
   984                           indf1	equ	0xFE7
   985                           postinc1	equ	0xFE6
   986                           postdec1	equ	0xFE5
   987                           preinc1	equ	0xFE4
   988                           plusw1	equ	0xFE3
   989                           fsr1h	equ	0xFE2
   990                           fsr1l	equ	0xFE1
   991                           bsr	equ	0xFE0
   992                           indf2	equ	0xFDF
   993                           postinc2	equ	0xFDE
   994                           postdec2	equ	0xFDD
   995                           preinc2	equ	0xFDC
   996                           plusw2	equ	0xFDB
   997                           fsr2h	equ	0xFDA
   998                           fsr2l	equ	0xFD9
   999                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      36
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _servo_control->___lldiv
    ___lldiv->___lmul

Critical Paths under _my_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     988
                      _servo_control
 ---------------------------------------------------------------------------------
 (1) _servo_control                                        0     0      0     988
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     522
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                             13 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _my_isr                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servo_control
     ___lldiv
       ___lmul (ARG)
     ___lmul

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      24       1       38.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      20        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Aug 11 14:16:46 2020

                     l38 02C4                       l71 0212                       l72 0222  
                     l57 0114                       l94 01B8                       l87 01A8  
                    l901 01F2                      l911 0150                      l903 0116  
                    l921 0198                      l913 015E                      l905 0126  
                    l923 01A2                      l915 0168                      l907 013C  
                    l931 0090                      l917 0186                      l909 0144  
                    l933 0098                      l925 0012                      l941 028E  
                    l919 0196                      l927 0024                      l935 00A4  
                    l951 02AA                      l943 0296                      l937 00B8  
                    l929 0030                      l961 02C0                      l953 02AC  
                    l945 0298                      l939 010C                      l963 02C2  
                    l955 02B2                      l947 029A                      l893 01BA  
                    l965 02D2                      l957 02B4                      l949 029C  
                    l895 01CA                      l959 02BE                      l897 01D8  
                    l899 01E8                      u200 00B8                      u201 00B4  
                    u210 02D2                      u211 02CE                      u140 01D8  
                    u141 01D4                      u150 0212                      u151 020E  
                    u160 013C                      u161 0138                      u170 015E  
                    u171 015A                      u180 0186                      u181 0182  
                    u190 0024                      u191 0020                      _pot 001B  
                    wreg 000FE8                     i2l51 028A                     _TMR0 000FD6  
                   _flag 0023                     _main 028E                     btemp 0025  
                   start 000E             ___param_bank 000000          ??_servo_control 001B  
                  ?_main 0001                    _ADRES 000FC3          __end_of___lldiv 01BA  
                  _T0CON 000FD5                    i2l881 0234                    i2l891 0288  
                  i2l883 0246                    i2l885 024E                    i2l887 0262  
                  i2l879 0226                    i2l889 026A                    _TRISA 000F92  
                  _TRISD 000F95      ___lmul@multiplicand 0006                    tablat 000FF5  
                  ttemp5 0026                    ttemp6 0029                    ttemp7 002D  
                  status 000FD8                    wtemp8 0026          __initialization 02DE  
           __end_of_main 02DE                   ??_main 001B            __activetblptr 000000  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _TMR0IF 007F92  
                 i2u9_40 0234                   i2u9_41 0230                   ___lmul 01BA  
              ??___lldiv 0016                   _grados 001F                   clear_0 02FC  
                 _my_isr 0008             __pdataCOMRAM 0023                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0302            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?___lmul 0002           ___lmul@product 000A                  ?_my_isr 0001  
                i2u10_40 0246                  i2u10_41 0242                  i2u11_40 0262  
                i2u11_41 025E                  i2u12_40 027C                  i2u12_41 0274  
                i2u13_48 027E                  __Hparam 0000                  __Lparam 0000  
        __size_of___lmul 006A                  ___lldiv 0116                  __pcinit 02DE  
                __ramtop 0800                  __ptext0 028E                  __ptext1 0012  
                __ptext2 01BA                  __ptext3 0116          __size_of_my_isr 0286  
  __end_of_servo_control 0116           __pintcode_body 0224     end_of_initialization 0302  
                int_func 0224          ___lldiv@divisor 0012          ___lldiv@counter 001A  
                postinc0 000FEE           __end_of___lmul 0224            __pidataCOMRAM 030C  
         __end_of_my_isr 028E      start_initialization 02DE                 ??___lmul 000A  
               ??_my_isr 0001              __pbssCOMRAM 001B                __pintcode 0008  
               ?___lldiv 000E                 _LATDbits 000F8C                 _PIE1bits 000F9D  
             _ADCON0bits 000FC2        ___lmul@multiplier 0002   __size_of_servo_control 0104  
               __Hrparam 0000                 __Lrparam 0000         __size_of___lldiv 00A4  
          __size_of_main 0050                 int$flags 0025            _servo_control 0012  
             _INTCONbits 000FF2                 intlevel2 0000         ___lldiv@dividend 000E  
         ?_servo_control 0001         ___lldiv@quotient 0016  
